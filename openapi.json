{
  "components": {
    "schemas": {
      "GetMultipleResponseSchema": {
        "properties": {
          "code": {
            "default": 200,
            "description": "Status Code",
            "title": "Code",
            "type": "integer"
          },
          "data": {
            "items": {
              "$ref": "#/components/schemas/StockSchema"
            },
            "title": "Data",
            "type": "array"
          },
          "message": {
            "default": "ok",
            "description": "Exception Information",
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "data"
        ],
        "title": "GetMultipleResponseSchema",
        "type": "object"
      },
      "GetResponseSchema": {
        "properties": {
          "code": {
            "default": 200,
            "description": "Status Code",
            "title": "Code",
            "type": "integer"
          },
          "data": {
            "$ref": "#/components/schemas/StockSchema"
          },
          "message": {
            "default": "ok",
            "description": "Exception Information",
            "title": "Message",
            "type": "string"
          }
        },
        "required": [
          "data"
        ],
        "title": "GetResponseSchema",
        "type": "object"
      },
      "PostBodySchema": {
        "properties": {
          "price_per_unit": {
            "description": "Price per unit",
            "exclusiveMinimum": false,
            "title": "Price Per Unit",
            "type": "number"
          },
          "stock_symbol": {
            "description": "symbolName",
            "title": "Stock Symbol",
            "type": "string"
          },
          "units": {
            "description": "Units Owned",
            "exclusiveMinimum": false,
            "title": "Units",
            "type": "number"
          }
        },
        "required": [
          "stock_symbol",
          "price_per_unit",
          "units"
        ],
        "title": "PostBodySchema",
        "type": "object"
      },
      "StockSchema": {
        "properties": {
          "avg_price": {
            "description": "Average Price",
            "minimum": 0.0,
            "title": "Avg Price",
            "type": "integer"
          },
          "qty": {
            "description": "Number of Units held",
            "minimum": 0.0,
            "title": "Qty",
            "type": "integer"
          },
          "symbol": {
            "description": "Stock Symbol",
            "title": "Symbol",
            "type": "integer"
          }
        },
        "required": [
          "symbol"
        ],
        "title": "StockSchema",
        "type": "object"
      },
      "ValidationErrorModel": {
        "properties": {
          "ctx": {
            "anyOf": [
              {
                "type": "object"
              },
              {
                "type": "null"
              }
            ],
            "description": "an optional object which contains values required to render the error message.",
            "title": "Error context"
          },
          "loc": {
            "anyOf": [
              {
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              {
                "type": "null"
              }
            ],
            "description": "the error's location as a list. ",
            "title": "Location"
          },
          "msg": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "a computer-readable identifier of the error type.",
            "title": "Message"
          },
          "type_": {
            "anyOf": [
              {
                "type": "string"
              },
              {
                "type": "null"
              }
            ],
            "description": "a human readable explanation of the error.",
            "title": "Error Type"
          }
        },
        "title": "ValidationErrorModel",
        "type": "object"
      }
    }
  },
  "info": {
    "title": "Stocks Viewer API",
    "version": "1.0.0"
  },
  "openapi": "3.1.0",
  "paths": {
    "/buy": {
      "post": {
        "description": "Post the details of stock to buy",
        "operationId": "add_purchase_buy_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBodySchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "msg": "ok\n"
          },
          "404": {
            "description": "Not Found",
            "msg": "Requested Resource was Not Found\n"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "msg": "Unexpected error while processing the buy request\n"
          }
        },
        "summary": "Purchase stock",
        "tags": [
          "Post Methods"
        ]
      }
    },
    "/sell": {
      "post": {
        "description": "Post the details of stock to sell",
        "operationId": "add_sale_sell_post",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PostBodySchema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "OK",
            "msg": "ok\n"
          },
          "404": {
            "description": "Not Found",
            "msg": "Requested Resource was Not Found\n"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          },
          "500": {
            "description": "Internal Server Error",
            "msg": "Unexpected error while processing the sale request\n"
          }
        },
        "summary": "Sell stock",
        "tags": [
          "Post Methods"
        ]
      }
    },
    "/stock/{symbol}": {
      "get": {
        "description": "Get stats for a specific stock",
        "operationId": "get_specific_stock_stock__symbol__get",
        "parameters": [
          {
            "description": "Stock Symbol",
            "in": "path",
            "name": "symbol",
            "required": true,
            "schema": {
              "description": "Stock Symbol",
              "title": "Symbol",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetResponseSchema"
                }
              }
            },
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "422": {
            "content": {
              "application/json": {
                "schema": {
                  "items": {
                    "$ref": "#/components/schemas/ValidationErrorModel"
                  },
                  "type": "array"
                }
              }
            },
            "description": "Unprocessable Entity"
          }
        },
        "summary": "Get stock",
        "tags": [
          "Get Methods"
        ]
      }
    },
    "/stocks/all": {
      "get": {
        "description": "Get stats for all stocks",
        "operationId": "get_all_stocks_all_get",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/GetMultipleResponseSchema"
                }
              }
            },
            "description": "OK"
          }
        },
        "summary": "Get all stocks",
        "tags": [
          "Get Methods"
        ]
      }
    }
  },
  "tags": [
    {
      "description": "Get All Stocks",
      "name": "Get Methods"
    },
    {
      "description": "Post Specific Stocks",
      "name": "Post Methods"
    }
  ]
}
